import tensorflow as tf
from tensorflow import keras

# Load the pre-trained InceptionV3 model
model = keras.applications.InceptionV3(include_top=False,
                                        weights='imagenet')

# Pre-process the image
def preprocess_image(image_path):
    # Read the image file
    image = tf.io.read_file(image_path)
    # Decode the JPEG image
    image = tf.image.decode_jpeg(image)
    # Convert the pixels from integers between 0 and 255 to floats between 0 and 1
    image = tf.image.convert_image_dtype(image, tf.float32)
    # Resize the image to the desired size
    image = tf.image.resize(image, (299, 299))
    # Normalize the pixels
    image = (image/127.5) - 1
    # Add an extra dimension to the image so that it has shape (1, 299, 299, 3)
    image = tf.expand_dims(image, 0)
    return image

# Use the InceptionV3 model to classify the image
def classify_image(model, image_path):
    # Pre-process the image
    image = preprocess_image(image_path)
    # Use the model to predict the class probabilities for the image
    predictions = model.predict(image)
    # Convert the class probabilities to a human-readable format
    predictions = tf.keras.applications.inception_v3.decode_predictions(predictions)
    # Print the top 5 predictions
    for prediction in predictions[0]:
        print(f'{prediction[1]} ({prediction[2] * 100:.2f}%)')
